"""
Django settings for alora project.

Generated by 'django-admin startproject' using Django 3.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'fujqy@2re5bsd+s%au0i*br3$twm2$s8!=ul)gtdjzkxr-gcbd'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    'aloradevs.ddns.net',
    '127.0.0.1'
]

PHONENUMBER_DB_FORMAT = 'E164'
PHONENUMBER_DEFAULT_REGION = 'US'

if DEBUG:
    EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'  # During development only

else:
    EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'  # During production
    EMAIL_HOST = 'smtp.gmail.com'
    EMAIL_HOST_USER = 'aloralsteam@gmail.com'
    EMAIL_HOST_PASSWORD = 'euvhgmoixzwkrdth'
    EMAIL_PORT = 587
    EMAIL_USE_TLS = True
    DEFAULT_FROM_EMAIL = 'Alora LS Team <noreply@aloradevs.ddns.net>'

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Third-Party Apps
    'bootstrap4',
    'cities_light',
    'datetimepicker',
    'django_user_agents',
    'formtools',
    'multiselectfield',
    'phonenumber_field',
    'rest_framework',
    'rest_framework.authtoken',
    'pygeocoder',
    'usps',

    # Local Apps
    'accounts',
    'addresses',
    'business',
    'core',
    'feedback',
    'pages',

]

BOOTSTRAP4 = {
    'include_jquery': True,
}

CITIES_LIGHT_TRANSLATION_LANGUAGES = ['en']
CITIES_LIGHT_INCLUDE_COUNTRIES = ['US']
CITIES_LIGHT_INCLUDE_CITY_TYPES = [
    'PPL', 'PPLA', 'PPLA2', 'PPLA3',
    'PPLA4', 'PPLC', 'PPLF', 'PPLG',
    'PPLL', 'PPLR', 'PPLS', 'STLMT',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django_user_agents.middleware.UserAgentMiddleware',
]

ROOT_URLCONF = 'alora.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

AUTH_USER_MODEL = 'accounts.Account'
AUTHENTICATION_BACKENDS = (
    'accounts.backends.EmailOrUsernameModelBackend', 'django.contrib.auth.backends.ModelBackend',)

WSGI_APPLICATION = 'alora.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'aloradb',
        'USER': 'root',
        'PASSWORD': '3xtr4S3cur3P455@NoCrackAlora',
        'HOST': 'aloradevs.ddns.net',
        'PORT': '3306',
        'OPTIONS': {'charset': 'utf8mb4'},
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
    {'NAME': 'accounts.validators.NumberValidator',
     'OPTIONS': {
         'min_digits': 1,
     }
     },
    {'NAME': 'accounts.validators.UppercaseValidator', },
    {'NAME': 'accounts.validators.LowercaseValidator', },
    {'NAME': 'accounts.validators.SymbolValidator', },
]

# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'US/Eastern'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]

STATIC_ROOT = os.path.join(BASE_DIR, 'assets')

REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
    ],
    'DEFAULT_PARSER_CLASSES': [
        'rest_framework.parsers.JSONParser',
        'rest_framework.parsers.FormParser',
        'rest_framework.parsers.MultiPartParser',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
    ],

    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ]
}

ADMINS = [('admin', 'admin@aloralaundry.com', 'admin', 'admin'),
          ('manager', 'manager@aloralaundry.com', 'manager', 'manager'),
          ('employee', 'employee@aloralaundry.com', 'employee', 'employee'),
          ('customer', 'customer@aloralaundry.com', 'customer', 'customer')]
API_KEY = 'AIzaSyAE_yj-AG2fliR1sRSU8iBxtm2U0-etR4g'
